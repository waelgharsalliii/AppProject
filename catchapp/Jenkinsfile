pipeline {
    agent any
      environment {
         KUBECONFIG = '/var/lib/jenkins/.kube/config'
    }

         stages {
           stage('Checkout') {
                steps {
                    git branch: 'main', url: 'https://github.com/waelgharsalliii/AppProject.git'
                }
            }

             stage('Build Docker Images') {
                steps {
                   dir('catchapp'){
                        // Build Docker images using Docker Compose
                        sh 'docker-compose -f docker-compose.yml build'
                    }
                }
            }

    
        stage('Login and Push to Docker Hub') {
            steps {
                dir('catchapp') {
                   withCredentials([usernamePassword(credentialsId: 'dockerhub-cred', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                            sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                            sh 'docker-compose -f docker-compose.yml push'

                        }
                    }
                }
            }
                stage('Teardown') {
                  steps {
                    dir('catchapp') {
                        echo 'Stopping Docker Compose services...'
                        // Stop and remove Docker Compose services
                        sh 'docker-compose -f docker-compose.yml down'
                    }
                  }
                }
           

             stage('Set Permissions') {
                steps {
                    // Setting the file permissions back to 600 after the Git checkout
                    sh '''
                        chmod 600 /var/lib/jenkins/jobs/Deployment/workspace/catchapp/k8s-vagrant/.vagrant/machines/master/virtualbox/private_key
                        chmod 600 /var/lib/jenkins/jobs/Deployment/workspace/catchapp/k8s-vagrant/.vagrant/machines/worker-01/virtualbox/private_key
                        chmod 600 /var/lib/jenkins/jobs/Deployment/workspace/catchapp/k8s-vagrant/.vagrant/machines/worker-02/virtualbox/private_key
                    '''
                }
            }
         /*    stage('Setup Kubernetes') {
                steps {
                    dir('catchapp') {
                       // Ensure Ansible is installed
                        sh 'ansible --version'
    
                        // Run Ansible playbook to configure Kubernetes
                        sh 'ansible-playbook -i k8s-vagrant/inventory/vagrant.hosts k8s-vagrant/playbooks/ansible-playbook.yaml'
                    }
                }
            }*/
    
    
            stage('Check Kubernetes Connectivity') {
                steps {
                    script {
                        sh '''
                        kubectl cluster-info
                        kubectl get nodes
                        '''
                    }
                }
            }
            
    
            
              stage('Deploy Application with Helm') {
                steps {
                    dir('catchapp') {
                        sh 'helm upgrade --install catch-app ./catch-app --namespace default'
    
                    }
                }
            }
          
        }
    }
